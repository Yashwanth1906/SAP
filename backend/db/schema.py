from fastapi import HTTPException
from connection import db_manager

def initialize_schema():
    try:
        with db_manager.get_cursor() as cursor:
            cursor.execute("""
                CREATE TABLE IF NOT EXISTS ORGANIZATIONS (
                    ID INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                    NAME NVARCHAR(255) NOT NULL,
                    ADDRESS NVARCHAR(500) NOT NULL,
                    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                )
            """)
            
            cursor.execute("""
                CREATE TABLE IF NOT EXISTS USERS (
                    ID INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                    EMAIL NVARCHAR(255) UNIQUE NOT NULL,
                    PASSWORD NVARCHAR(255) NOT NULL,
                    ORGANIZATION_ID INTEGER,
                    IS_ADMIN BOOLEAN DEFAULT FALSE,
                    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    FOREIGN KEY (ORGANIZATION_ID) REFERENCES ORGANIZATIONS(ID) ON DELETE SET NULL
                )
            """)
            
            cursor.execute("""
                CREATE TABLE IF NOT EXISTS MODELS (
                    ID INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                    NAME NVARCHAR(255) NOT NULL,
                    TYPE NVARCHAR(100) NOT NULL,
                    CERTIFICATION_CATEGORY NVARCHAR(100) NOT NULL,
                    BIAS_ON BOOLEAN DEFAULT FALSE,
                    INTENTIONAL_BIAS BOOLEAN DEFAULT FALSE,
                    ORGANIZATION_ID INTEGER NOT NULL,
                    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    FOREIGN KEY (ORGANIZATION_ID) REFERENCES ORGANIZATIONS(ID) ON DELETE CASCADE
                )
            """)
            
            try:
                cursor.execute("ALTER TABLE ORGANIZATIONS ADD COLUMN ADMIN_ID INTEGER")
                cursor.execute("ALTER TABLE ORGANIZATIONS ADD CONSTRAINT FK_ORG_ADMIN FOREIGN KEY (ADMIN_ID) REFERENCES USERS(ID)")
            except:
                pass
                
        return {"message": "Database schema initialized successfully"}
    except Exception as e:
        raise HTTPException(status_code=500, detail=f"Failed to initialize schema: {str(e)}") 